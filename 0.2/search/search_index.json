{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Otto","text":"<p>The Ottomatic video engine</p>"},{"location":"#install","title":"install","text":"<p>Clone the repository</p> <pre><code>git clone https://github.com/quaternionmedia/otto.git\ncd otto/\n</code></pre>"},{"location":"#poetry-recommended","title":"Poetry (Recommended)","text":"<p>Install with poetry</p> <pre><code>poetry install\n</code></pre>"},{"location":"#pip","title":"Pip","text":"<pre><code>pip3 install -e .\n</code></pre>"},{"location":"reference/","title":"Reference","text":"<p>Reference for Otto classes</p>"},{"location":"reference/main/","title":"Main","text":""},{"location":"reference/main/#otto.main.getTemplates","title":"<code>getTemplates()</code>  <code>async</code>","text":""},{"location":"reference/main/#otto.main.getTemplates--get-templates","title":"Get templates","text":"<p>Returns a list of template names currently loaded and available.</p> Source code in <code>otto/main.py</code> <pre><code>@app.get('/templates')\nasync def getTemplates() -&gt; list:\n\"\"\"# Get templates\n    Returns a list of template names currently loaded and available.\"\"\"\n    return [t for t in dir(templates) if t.islower() and t[0] != '_']\n</code></pre>"},{"location":"reference/models/","title":"Models","text":""},{"location":"reference/templates/","title":"Templates","text":""}]}